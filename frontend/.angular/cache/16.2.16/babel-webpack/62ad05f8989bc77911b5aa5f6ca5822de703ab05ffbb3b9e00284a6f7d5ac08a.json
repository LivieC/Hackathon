{"ast":null,"code":"import { tap } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  http;\n  apiUrl = `${environment.apiUrl}/api/auth`;\n  isAuthenticated = false;\n  constructor(http) {\n    this.http = http;\n  }\n  login(username, password) {\n    return this.http.post(`${this.apiUrl}/login`, {\n      username,\n      password\n    }).pipe(tap(() => this.isAuthenticated = true));\n  }\n  isLoggedIn() {\n    return this.isAuthenticated;\n  }\n  logout() {\n    this.isAuthenticated = false;\n  }\n  static ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["tap","environment","AuthService","http","apiUrl","isAuthenticated","constructor","login","username","password","post","pipe","isLoggedIn","logout","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["E:\\citi\\JavaTraining\\Project\\TA_Hackathon\\project01\\frontend\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  private apiUrl = `${environment.apiUrl}/api/auth`;\r\n  private isAuthenticated = false;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  login(username: string, password: string): Observable<any> {\r\n    return this.http.post(`${this.apiUrl}/login`, { username, password })\r\n      .pipe(\r\n        tap(() => this.isAuthenticated = true)\r\n      );\r\n  }\r\n\r\n  isLoggedIn(): boolean {\r\n    return this.isAuthenticated;\r\n  }\r\n\r\n  logout(): void {\r\n    this.isAuthenticated = false;\r\n  }\r\n} "],"mappings":"AAGA,SAASA,GAAG,QAAQ,gBAAgB;AACpC,SAASC,WAAW,QAAQ,gCAAgC;;;AAK5D,OAAM,MAAOC,WAAW;EAIFC,IAAA;EAHZC,MAAM,GAAG,GAAGH,WAAW,CAACG,MAAM,WAAW;EACzCC,eAAe,GAAG,KAAK;EAE/BC,YAAoBH,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvCI,KAAKA,CAACC,QAAgB,EAAEC,QAAgB;IACtC,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAC,GAAG,IAAI,CAACN,MAAM,QAAQ,EAAE;MAAEI,QAAQ;MAAEC;IAAQ,CAAE,CAAC,CAClEE,IAAI,CACHX,GAAG,CAAC,MAAM,IAAI,CAACK,eAAe,GAAG,IAAI,CAAC,CACvC;EACL;EAEAO,UAAUA,CAAA;IACR,OAAO,IAAI,CAACP,eAAe;EAC7B;EAEAQ,MAAMA,CAAA;IACJ,IAAI,CAACR,eAAe,GAAG,KAAK;EAC9B;;qBAnBWH,WAAW,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;;WAAXf,WAAW;IAAAgB,OAAA,EAAXhB,WAAW,CAAAiB,IAAA;IAAAC,UAAA,EAFV;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}